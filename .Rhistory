finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
x = probObj$QnBayes['W340',]
x
priorFunction(x)
goodTuring(x)
str(x)
x = probObj$QnBayes['V099',]
priorFunction(x)
x = probObj$QnBayes['W344',]
priorFunction(x)
sort(priorFunction(x))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
.machine
.machine()
.Machine
?.Machine
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
tail(sort(results$eStepVec))
tail(sort(results$naiveBayesVec))
showBayesCompute(results)
source('GC Methods.R')
showBayesCompute(results)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
tail(sort(results$naiveBayesVec))
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
bestCall <- function(x, ...) { 
result = bayesCompute(evidence=x, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51")
bestCall(dat[6, mcdCols], probObj=probObj)
datBayes <- ddply(dat[sample(nrow(dat),100), goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
traceback()
source('GC Methods.R')
bestCall <- function(x, ...) { 
result = bayesCompute(evidence=x, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51")
bestCall(dat[6, mcdCols], probObj=probObj)
someRows <- sample(nrow(dat),3)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[1:3,], datBayes[ncol(datBayes),], datBayes[4:(ncol(datBayes)-1)])
head(datBayes)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naive=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
someRows <- sample(nrow(dat),30)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
someRows <- sample(nrow(dat),40)
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
datBayes
datBayes
someRows <- which(dat$gs_text=='_gc')
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
someRows
someRows <- which(dat$icd_name=='_gc')
someRows
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
eGlobal=bestCall(x=c(codcau11, codcau21, codcau31, codcau41, codcau51), probObj=probObj))
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
datBayes
datBayes[order(datBayes$gs_text),]
q()
rm(list=ls())
setwd('C:/Users/John/Desktop/DeathCertificates/')
#library(jsonlite)     # .JSON files
#library(RJSONIO)
#library(gdata)        # Excel files
library(lattice)
library(latticeExtra)
library(plyr)
library(gplots)
library(gtools)       # smartbind  (to bind dfs with different columns)
#library(RWeka)        # Various machine learning implementations
library(expm)         # matrix exponentiation
library(edgeR)        # Good-Turing estimator background for transition matrix
source('GC Methods.R')
# -----------------------------------------------
# Start by reading in the Mexico death certificate data.   This supposedly has the data from 1589 Mexican
# subjects.   These are 'gold standard' reviewed documents and 224 of them are noted as being garbage codes.
# Prep the data in the other script file, 'DeathCertificates_Basic_Data_Shaping_and_Storage.R'
load(file='dat.RData')          # Load the (1587x67) data as processed in earlier
load(file='icd10Vec.RData')     # 91,737 ICD-10 definitions
load(file='colDesc.RData')      # Descriptions of the column headers (547 headers as a named vector)
# Note here I am also ingesting the 'causadef' field.   Above I saw that causadef for _gc and non_gc
# patients were completely disjoint sets.
dat[1:5, goodCols]
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
goodCols <- c(1,4,10,12:17, which(names(dat) %in% c("age", 'ageGroup',"gender", "education", 
"cigsPerDay", 'smokingGroup')))
dat[1:5, goodCols]
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
goodCols <- c(1,4,10,12:17, which(names(dat) %in% c("age", 'ageGroup',"gender", "education", 
"cigsPerDay", 'smokingGroup')))
someIds <- sample(dat$sid[dat$icd_name != '_gc'])
dat[dat$sid %in% someIds[10:15], goodCols]
# Note here I am also ingesting the 'causadef' field.   Above I saw that causadef for _gc and non_gc
# patients were completely disjoint sets.
dat[1:5, goodCols]
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
probObj$problems
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
str(dat[goodCols,])
goodCols <- c(1,4,10,12:17, which(names(dat) %in% c("age", 'ageGroup',"gender", "education", 
"cigsPerDay", 'smokingGroup')))
str(dat[goodCols,])
goodCols
str(dat[,goodCols])
factor(dat$ageGroup)
levels(dat$ageGroup)
finalCause="gs_text"
x=dat[dat$sid %in% someIds,]
cofactor='ageGroup'
finalVec       <- sort(unique(x[, finalCause]))
cofVec         <- paste(cofactor, levels(x$cofactor), sep='.')
finalVec
cofVec
levels(x$cofactor)
str(x)
cofVec         <- paste(cofactor, levels(x[,cofactor]), sep='.')
cofVec
a <- ddply(x, cofactor, summarize, meanAge=mean(age))
str(a)
a
mean(x$age[x$ageGroup=='Infant'])
mean(x$age[x$ageGroup=='Infant'], na.rm=TRUE)
mean(x$age[x$ageGroup=='Child'], na.rm=TRUE)
ddply(x, cofactor, summarize, meanAge=mean(age))
ddply(x, cofactor, summarize, meanAge=table(gs_text))
d_ply(x, cofactor, summarize, table(gs_text))
?d_ply
ddply(x, cofactor, table(gs_text))
ddply(x, cofactor, result=table(gs_text))
a=ddply(x, cofactor, result=table(gs_text))
str(a)
a=ddply(x, cofactor, mutate, result=table(gs_text))
a=ddply(x, cofactor, transform, result=table(gs_text))
numInput  <- nrow(x)
nRows     <- length(cofVec)
nCols     <- length(finalVec)
Q         <- matrix(rep(0, nRows*nCols), nrow=nRows, ncol=nCols, dimnames=list(cofVec, finalVec))
temp <- NULL
for (aLevel in levels(x[,cofactor])) {
inx <- x[,cofactor] == aLevel
temp <- rbind(temp, table(x[inx,cofactor]))
}
temp
inx
temp <- NULL
for (aLevel in levels(x[,cofactor])) {
inx <- x[,cofactor] == aLevel
temp <- rbind(temp, table(x[inx,finalCause]))
}
str(temp)
temp
finalVec
table(x$ageGroup, x$gs_text)
str(table(x$ageGroup, x$gs_text))
priorMethod='Good-Turing'
Q  <- table(x[,cofactor], x[,finalCause])
for (i in 1:nrow(Q)) {
Q[i,]  <- priorFunction(x=as.numeric(Q[i,]), method=priorMethod, constant=1/sum(Q[i,]))
}
Q
Q  <- table(x[,cofactor], x[,finalCause])
for (i in 1:nrow(Q)) {
Q[i,] <- priorFunction(x=as.numeric(Q[i,]), method=priorMethod, constant=1/sum(Q[i,]))
Q[i,] <- Q[i,] / sum(Q[i,] 
}
rownames(Q) <- paste(cofactor, rownames(Q), sep='.')
Q
Q  <- table(x[,cofactor], x[,finalCause])
for (i in 1:nrow(Q)) {
Q[i,] <- priorFunction(x=as.numeric(Q[i,]), method=priorMethod, constant=1/sum(Q[i,]))
Q[i,] <- Q[i,] / sum(Q[i,])
}
rownames(Q) <- paste(cofactor, rownames(Q), sep='.')
Q
str(Q)
plot(Q)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
dat[1:5, goodCols]
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
probObj$QnBayes['gender.unknown',]
probObj$QnBayes['gender.Female',]
rownames(probObj$QnBayes)
probObj$QnBayes['gender.Unknown',]
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
rowsum(probObj$QnBayes)
rowsums(probObj$QnBayes)
rowSum(probObj$QnBayes)
rowSums(probObj$QnBayes)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
plot(probObj$codVec)
sort(probObj$codVec)
source('GC Methods.R')
results  <- bayesCompute(evidence=c("C924","J960","R048","C924"), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
results  <- bayesCompute(evidence=c("C924","J960","R048","C924", 'gender.Female'), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
source('GC Methods.R')
x=dat[dat$sid %in% someIds,]
probObj  <- getMCDTransitionMatrix(x=x, priorFunction='Good-Turing',
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51"),
finalCause="gs_text", cofactors=c('gender', 'ageGroup', 'smokingGroup'))
junk = probObj$QnBayes[sample(nrow(probObj$QnBayes),30), sample(ncol(probObj$QnBayes),7)]
str(probObj);  signif(junk,2);
visualizeTransitionMatrix(probObj$QnBayes)
source('GC Methods.R')
results  <- bayesCompute(evidence=c("C924","J960","R048","C924", 'gender.Female'), probObj);  str(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
head(sort(results$naiveBayesVec, decreasing=TRUE))
results  <- bayesCompute(evidence=c("C924","J960","R048","C924", 'gender.Male'), probObj)
head(sort(results$naiveBayesVec, decreasing=TRUE))
dat[dat$sid %in% someIds[10:15], goodCols]
results  <- bayesCompute(evidence=c("C509", 'gender.female'), probObj)
head(sort(results$naiveBayesVec, decreasing=TRUE))
results  <- bayesCompute(evidence=c("C509", 'gender.male'), probObj)
head(sort(results$naiveBayesVec, decreasing=TRUE))
showBayesCompute(results)
probObj['C509',]
probObj$QnBayes['C509',]
sort(probObj$QnBayes['C509',])
sort(probObj$QnBayes['GENDER.MALE',])
mcdCols=c("codcau11", "codcau21", "codcau31", "codcau41", "codcau51")
bestCall.2 <- function(x, mcdCols, cofactors, ...) {
evidence = x[ mcdCols ]
for (aCofactor in cofactors) {
evidence <- c(evidence, cleanICDs(paste(aCofactor, x[aCofactor], sep='.')))
}
print(evidence)
result = bayesCompute(evidence=evidence, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
bestCall.2(x=dat[6,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
bestCall.2 <- function(x, mcdCols, cofactors, ...) {
evidence = unlist(x[ mcdCols ])
for (aCofactor in cofactors) {
evidence <- c(evidence, cleanICDs(paste(aCofactor, as.character(x[aCofactor]), sep='.')))
}
print(evidence)
result = bayesCompute(evidence=evidence, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
bestCall.2(x=dat[6,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
dat[6,goodCols]
dat[6,]
dat[6,'ageGroup']
x=dat[6,]
x['ageGroup']
str(x['ageGroup'])
as.character(x['ageGroup'])
level(x['ageGroup'])
levels(x['ageGroup'])
?levels
as.character(x['ageGroup'])
character(x['ageGroup'])
character(x[,'ageGroup'])
character(x['ageGroup',])
x
character(x)
character(x$ageGroup)
as.character(dat$ageGroup)[1:30]
as.character(x$ageGroup)[1:30]
as.character(x[ageGroup])[1:30]
as.character(x['ageGroup'])[1:30]
as.character(x[,'ageGroup'])[1:30]
bestCall.2 <- function(x, mcdCols, cofactors, ...) {
evidence = unlist(x[ mcdCols ])
for (aCofactor in cofactors) {
evidence <- c(evidence, cleanICDs(paste(aCofactor, as.character(x[,aCofactor]), sep='.')))
}
print(evidence)
result = bayesCompute(evidence=evidence, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
bestCall.2(x=dat[6,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
bestCall.2(x=dat[16,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
dat[16,]
someRows <- sample(nrow(dat),40)
someRows <- which(dat$icd_name=='_gc')
goodCols
dat[dat$sid %in% someIds[10:15], goodCols]
datBayes <- ddply(dat[someRows, goodCols], .(sid), mutate, 
bayesCall=bestCall.2(x=c(codcau11, codcau21, codcau31, codcau41, codcau51, ageGroup, gender), 
mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj))
datBayes <- dat[someRows, goodCols]
datBayes$naiveBayes <- NA
someRows
someRows <- sample(nrow(dat),5)
datBayes <- dat[someRows, goodCols]
datBayes$naiveBayes <- NA
datBayes
for (i in 1:nrow(datBayes)) {
datBayes[i,'naiveBayes'] <- bestCall.2(x=datBayes[i,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
}
datBayes
bestCall.2 <- function(x, mcdCols, cofactors, ...) {
evidence = unlist(x[ mcdCols ])
for (aCofactor in cofactors) {
evidence <- c(evidence, cleanICDs(paste(aCofactor, as.character(x[,aCofactor]), sep='.')))
}
result = bayesCompute(evidence=evidence, ...)$naiveBayesVec
return(names(sort(result, decreasing=TRUE))[1])
}
bestCall.2(x=dat[16,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
datBayes <- dat[someRows, goodCols]
datBayes$naiveBayes <- NA
for (i in 1:nrow(datBayes)) {
datBayes[i,'naiveBayes'] <- bestCall.2(x=datBayes[i,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
}
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
someRows <- sample(nrow(dat),50)
datBayes <- dat[someRows, goodCols]
datBayes$naiveBayes <- NA
for (i in 1:nrow(datBayes)) {
datBayes[i,'naiveBayes'] <- bestCall.2(x=datBayes[i,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
}
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
icdGuess('C61','C795','C61')
icdGuess(c('C61','C795','C61'))
datBayes <- dat
datBayes$naiveBayes <- NA
for (i in 1:nrow(datBayes)) {
datBayes[i,'naiveBayes'] <- bestCall.2(x=datBayes[i,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
}
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
datBayes <- dat[,goodCols]
datBayes$naiveBayes <- NA
for (i in 1:nrow(datBayes)) {
datBayes[i,'naiveBayes'] <- bestCall.2(x=datBayes[i,], mcdCols=mcdCols, cofactors=c('ageGroup', 'gender'), probObj=probObj)
}
datBayes <- cbind(datBayes[,1:3], naiveBayes=datBayes[,ncol(datBayes)], datBayes[,4:(ncol(datBayes)-1)])
head(datBayes)
write.csv(datBayes, file='datBayes.csv', quote=FALSE)
rm(list=ls())
q()
